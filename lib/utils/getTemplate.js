const template = ``
function base64ToArrayBuffer(base64) {
  const binaryString = atob(base64)
  const length = binaryString.length
  const bytes = new Uint8Array(length)
  for (let i = 0; i < length; i++) {
    bytes[i] = binaryString.charCodeAt(i)
  }
  return bytes.buffer
}

let cache = undefined

const getTemplate = () => {
  if (!cache) cache = base64ToArrayBuffer(template)
  return cache
}

export default getTemplate
